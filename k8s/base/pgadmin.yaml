apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  namespace: davtrowebdb
  labels:
    app: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres:14
          command:
            - sh
            - -c
            - |
              echo "Waiting for database to be ready..."
              until pg_isready -h db -p 5432 -U appuser -d appdb; do
                echo "Database not ready yet. Waiting..."
                sleep 5
              done
              echo "Database is ready!"
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: postgres-password
      containers:
        - name: pgadmin
          image: dpage/pgadmin4:latest
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: "admin@admin.com"
            - name: PGADMIN_DEFAULT_PASSWORD
              value: "admin"
            - name: PGADMIN_CONFIG_SERVER_MODE
              value: "False"
            - name: PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED
              value: "False"
            - name: PGADMIN_CONFIG_WTF_CSRF_ENABLED
              value: "False"
            - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
              value: "False"
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "512Mi" # Zwiększono z 256Mi
              cpu: "200m" # Zwiększono z 100m
            limits:
              memory: "1Gi" # Zwiększono z 512Mi
              cpu: "500m" # Zwiększono z 200m
          livenessProbe:
            httpGet:
              path: /misc/ping
              port: 80
            initialDelaySeconds: 120 # Zwiększono z 60
            periodSeconds: 20 # Zwiększono z 10
            timeoutSeconds: 10 # Zwiększono z 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /misc/ping
              port: 80
            initialDelaySeconds: 90 # Zwiększono z 30
            periodSeconds: 15 # Zwiększono z 5
            timeoutSeconds: 10 # Zwiększono z 3
            failureThreshold: 3
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
            - name: pgadmin-config
              mountPath: /pgadmin4/config.py
              subPath: config.py
      volumes:
        - name: pgadmin-data
          persistentVolumeClaim:
            claimName: pgadmin-pvc
        - name: pgadmin-config
          configMap:
            name: pgadmin-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin-pvc
  namespace: davtrowebdb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-config
  namespace: davtrowebdb
data:
  config.py: |
    import os
    from logging.handlers import SysLogHandler
    import urllib.parse

    # Security
    CSRF_SAME_SITE = 'None'
    SESSION_COOKIE_SAMESITE = 'None'
    SESSION_COOKIE_SECURE = True

    # Server settings
    SERVER_MODE = False
    MASTER_PASSWORD_REQUIRED = False

    # Database connection
    DEFAULT_SERVER = '0.0.0.0'
    DEFAULT_SERVER_PORT = 80

    # Security headers
    ENABLE_CSRF_PROTECTION = False
    ENHANCED_COOKIE_PROTECTION = False

    # Logging
    CONSOLE_LOG_LEVEL = 'INFO'
    FILE_LOG_LEVEL = 'INFO'
