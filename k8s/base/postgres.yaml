apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: $NAMESPACE
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: postgres
        image: postgres:14
        env:
        - name: POSTGRES_DB
          value: appdb
        - name: POSTGRES_USER
          value: appuser
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: postgres-password
        - name: POSTGRES_HOST_AUTH_METHOD
          value: "md5"
        command:
        - bash
        - -c
        - |
          # Sprawdź czy baza jest już zainicjalizowana
          if [ ! -f /var/lib/postgresql/data/PG_VERSION ]; then
            echo "Initializing database..."
            initdb -D /var/lib/postgresql/data
          else
            echo "Database already exists, skipping initdb"
          fi
          
          # Konfiguruj połączenia zdalne
          echo "host all all all md5" >> /var/lib/postgresql/data/pg_hba.conf
          echo "listen_addresses = '*'" >> /var/lib/postgresql/data/postgresql.conf
          
          # Uruchom serwer PostgreSQL
          exec postgres -D /var/lib/postgresql/data
        ports:
        - containerPort: 5432
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready -U appuser -d appdb
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready -U appuser -d appdb
          initialDelaySeconds: 30
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: $NAMESPACE
  labels:
    app: db
spec:
  selector:
    app: db
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
